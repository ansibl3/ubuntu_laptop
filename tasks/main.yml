---
- name: add partner repo
  apt_repository: repo="deb http://archive.canonical.com/ubuntu {{ansible_distribution_release}} partner" state=present update_cache=yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('22.04', '<='))

- name: install legacy editors
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  with_items:
      - "leafpad"
  tags: editors

- name: install editors
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "vim"
      - "gedit"
  tags: editors

- name: install legacy ubuntu media
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('16.04', '<='))
  with_items:
      - "leafpad"
  tags: ubuntumedia

- name: install ubuntu media
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu'
  with_items:
      - "ubuntu-restricted-extras"
      - "ripoff"
  tags: ubuntumedia

- name: install legacy media
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "libdvdread4"
  tags: media

- name: install new media
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '>='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "libdvdread8t64"
  tags: media

- name: install media
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "geeqie"
      - "vlc"
      - "mplayer"
      - "mencoder"
      - "kaffeine"
      - "alsa-utils"
      - "pulseaudio-utils"
      - "pavucontrol"
      - "ripperx"
      - "ripit"
      - "libavcodec-extra"
#      - "pepperflashplugin-nonfree"
  tags: media

- name: install legacy hexeditors
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=yes
  with_items:
      - "lfhex"
  tags: hexeditors

- name: install hexeditors
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=yes
  with_items:
      - "ghex"
      - "okteta"
      - "wxhexeditor"
      - "radare2"
      - "hexer"
      - "beav"
#      - "bless"
  tags: hexeditors

- name: install hexeditors ubuntu
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=yes
  when: ansible_distribution == 'Ubuntu'
  with_items:
      - "hexdiff"
  tags: hexeditors-ubuntu

- name: install mail
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "postfix"
      - "mutt"
      - "offlineimap"
      - "msmtp"
  tags: mail

- name: install mail ubuntu
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=yes
  when: ansible_distribution == 'Ubuntu'
  with_items:
      - "thunderbird"
  tags: mail-ubuntu

- name: install mail debian
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Kali'
  with_items:
      - "icedove"
  tags: mail-debian

- name: install legacy devel
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "python-pip"
  tags: devel

- name: install new devel
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '>='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "python3-pip"
  tags: devel

- name: install devel
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "build-essential"
      - "ruby-full"
      - "perl"
      - "perl-doc"
      - "golang"
  tags: devel

- name: install devel ubuntu
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu'
  with_items:
      - "gccgo-go"
  tags: devel-ubuntu

- name: install crossdevel
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "g++-mingw-w64-i686"
      - "g++-mingw-w64-x86-64"
      - "mingw-w64-tools"
  tags: crossdevel

- name: install dvcs
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "subversion"
      - "subversion-tools"
      - "git"
      - "bzr"
      - "mercurial"
  tags: dvcs

- name: install utilities
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "screen"
      - "tmux"
      - "mc"
      - "rar"
      - "unrar"
      - "p7zip-full"
      - "unzip"
      - "zip"
      - "acct"
      - "iotop"
      - "htop"
      - "atop"
      - "zsh"
      - "dcfldd"
      - "libdate-manip-perl"
      - "uml-utilities"
  tags: utils

- name: install x11 utilities
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "gnome-commander"
  tags: x11utils

- name: install legacy x11 utilities
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "shutter"
  tags: x11utils

- name: install x11 utilities
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "root-tail"
      - "conky-all"
      - "arandr"
      - "diodon"
      - "brasero"
      - "xfce4-power-manager"
  tags: x11utils

- name: install legacy network
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '<='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "transmission-remote-cli"
  tags: network

- name: install crypt
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('24.04', '>='))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "gocryptfs"
      - "zulucrypt-cli"
      - "zulucrypt-gui"
  tags: crypt

- name: install new network
  become: yes
  when: ansible_distribution == 'Ubuntu' and (ansible_distribution_version is version('18.04', '>'))
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "transmission-cli"
  tags: network

- name: install network
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "openssh-server"
      - "openvpn"
      - "vpnc"
      - "lftp"
      - "ncftp"
      - "gftp"
      - "wget"
      - "curl"
      - "tsocks"
      - "proxychains"
      - "rtorrent"
      - "transmission"
      - "transmission-daemon"
      - "transmission-remote-gtk"
      - "network-manager-openvpn-gnome"
      - "network-manager-vpnc-gnome"
  tags: network

- name: install network ubuntu
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu'
  with_items:
      - "chromium-browser"
  tags: network-ubuntu network

- name: install network debian
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Kali'
  with_items:
      - "chromium"
  tags: network-debian network

- name: install window managers
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "i3"
      - "awesome"
      - "icewm"
  tags: windowmanagers

- name: install security related packages
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  with_items:
      - "chkrootkit"
      - "rkhunter"
      - "debsums"
      - "keepassx"
      - "kpcli"
      - "wipe"
      - "secure-delete"
  tags: security-defend


- name: install remote desktop related packages
  become: yes
  action: apt pkg="{{item}}" state=present update_cache=no
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'
  with_items:
      - "x2goserver"
      - "x2goclient"
  tags: rdp-like

- name: Install pyenv and prerequisites
  import_tasks: pyenv.yml
